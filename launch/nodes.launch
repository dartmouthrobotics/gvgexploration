<!-- Robot nodes with parameters for simulation. -->
<launch>
<arg name="robot_name"/>
<arg name="robot_id" value="$(eval arg('robot_name') - 1)"/>

<param name="robot_id" value="$(arg robot_name)" />
<param name="tf_prefix" type="string" value="robot_$(arg robot_id)"/>

<rosparam command="load" file="$(find gvgexploration)/param/ros.yaml" subst_value="true"/>

<arg name="map_offset" value="$(eval arg('robot_id') * 0)"/>
<node name="map_align" pkg="tf" type="static_transform_publisher" args="$(arg map_offset) 0 0 0 0 0 /map /robot_$(arg robot_id)/map 100"/>

<node name="scan_filter" pkg="gvgexploration" type="scan_filter.py">
    <param name="robot_id" value="$(arg robot_id)" />
</node>

<node pkg="nav2d_operator" type="operator" name="operator" output="screen">
    <rosparam command="load" file="$(find gvgexploration)/param/operator.yaml" subst_value="true"/>
    <rosparam command="load" file="$(find gvgexploration)/param/costmap.yaml" ns="local_map" subst_value="true"/>
    <param name="robot_frame" value="base_link"/>
    <param name="odometry_frame" value="odom"/>
</node>

<node pkg="nav2d_navigator" type="navigator" name="navigator">
    <rosparam command="load" file="$(find gvgexploration)/param/navigation.yaml" subst_value="true"/>
    <param name="robot_id" value="$(arg robot_name)"/>
</node>

<node name="GetMap" pkg="nav2d_navigator" type="get_map_client" />
<node name="SetGoal" pkg="nav2d_navigator" type="set_goal_client" />

<node pkg="nav2d_karto" name="Mapper" type="mapper">
    <rosparam command="load" file="$(find gvgexploration)/param/mapper.yaml" subst_value="true"/>
    <remap from="karto_out" to="/karto_out"/>
</node>
</launch>
